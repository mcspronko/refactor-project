parameters:
  isSandbox: 'false'
  authentication.username: codetest
  authentication.password: AQJl5jewY2lZkrJpiT1cCJkj1tLPn64R
  api.url: 'http://api.thejournal.ie/v3/'
  resources.location: '/../../../../resources/demo-responses/'
  twig.templates: '../src/view-html/'
  environment.options:
    cache: '../tmp/cache'
  resources.mapping:
    article: thejournal.json
    sample/thejournal: thejournal.json
    sample/tag/google: google.json
    sample/tag/apple: apple.json
services:
  kernel:
    class:    \JournalMedia\Sample\Http\Kernel
    arguments: ['@route', '@http.message.response']
  emitter:
    class:    \Zend\HttpHandlerRunner\Emitter\SapiEmitter
  http.message.response:
    class:    \Zend\Diactoros\Response
  route:
    class:    \League\Route\RouteCollection
    calls:
      - [get, ['article/{id}', '@article.controller']]
      - [get, ['/tag/{tag}', '@tag.controller']]
      - [get, ['/', '@index.controller']]
  article.controller:
    class:    \JournalMedia\Sample\Http\Controller\ArticleController
    arguments: ['@article.repository', '@html.response']
  tag.controller:
    class:    \JournalMedia\Sample\Http\Controller\TagRiverController
    arguments: ['@article.repository', '@html.response']
  index.controller:
    class:    \JournalMedia\Sample\Http\Controller\PublicationRiverController
    arguments: ['@article.repository', '@html.response']
  html.response:
    class:    \JournalMedia\Sample\Service\HtmlResponse
    arguments: ['@twig', '@response.factory']
  response.factory:
    class:    \JournalMedia\Sample\Service\HtmlResponseFactory
  response.html.response:
    class:    \Zend\Diactoros\Response\HtmlResponse
    arguments: ['%html-response%']
  twig:
    class:    \Twig\Environment
    arguments: ['@loader', '%environment.options%']
  loader:
    class: \Twig\Loader\FilesystemLoader
    arguments: ['%twig.templates%']
  finder:
    class:     \Symfony\Component\Finder\Finder
  curl.converter:
    class:     \JournalMedia\Sample\Service\Http\Converter\JsonToArray
  transfer.factory:
    class:     \JournalMedia\Sample\Service\Http\TransferFactory
    arguments: ['%api.url%']
  client.file:
    class:     \JournalMedia\Sample\Service\Http\Client\File
    arguments: ['@finder', '@curl.converter', '%resources.mapping%', '%resources.location%']
  curl.http.client:
    class:     \Symfony\Component\HttpClient\CurlHttpClient
  curl.transfer.factory:
    class:     \JournalMedia\Sample\Service\Http\TransferFactory
    arguments: ['%api.url%']
    calls:
      - [setMethod, ['GET']]
      - [setUsername, ['%authentication.username%']]
      - [setPassword, ['%authentication.password%']]
  client.curl:
    class:     \JournalMedia\Sample\Service\Http\Client\Curl
    arguments: ['@curl.http.client', '@curl.converter']
  container.provider:
    class: \JournalMedia\Sample\Service\ContainerProvider
  http.client.factory:
    class:    \JournalMedia\Sample\Service\HttpClientFactory
    arguments: ['@environment']
  resource:
    class:    \JournalMedia\Sample\Service\Resource
    arguments: ['@http.client.factory', '@environment']
  environment:
    class:    \JournalMedia\Sample\Service\Environment
    arguments: ['%isSandbox%']
  article:
    class:    \JournalMedia\Sample\Domain\Data\Article
  article.repository:
    class:     \JournalMedia\Sample\Domain\ArticleRepository
    arguments: ['@resource', '@curl.converter']
  publication.river.controller:
    class: \JournalMedia\Sample\Http\Controller\PublicationRiverController
    arguments: ['@article.repository']